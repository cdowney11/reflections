How did viewing a diff between two versions of a file help you see the bug that was introduced?

It was easier to see what lines were changed so I could ignore everything that was the same, it took me a matter of seconds to find where the issue was.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
If I was working on something that wasn't working and I've made multiple changes I could go back to the last previous version that was working. From here I could take a different route.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
The advantage is that you can control when the commit takes place, hopefully at a logical point in your work when things are working as they should. The downside is that it is still subject to human lazieness. If you don't commit your work, no one else will for you.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while other, like Google Docs, treat each file separately?
I think it is probably to ensure that all the files that have been changed get captured rather than leaving up to the user to commit all the files. Also you might want to pull down all those files to revert to a previous version and if all the files weren't there then it would be come complicated to collect all the files in the entire project that was last updated.

How can you use the commands git log and git diff to view the history of files?
You can run git log to see all the commits made starting with the newest and then you can take the commit ids from two different commits and run git diff commitID#1 commitID#2 to compare the changes to of the files

How might using version control make you more confident to make changes that could break something?
Because if you have made the commits previously you will be able to go back to a state when your code was working before you did something to break the code, you can always undo what you did.

Now that you have your workspace set up, what do you want to try using Git for?
I want to implement it with my larger android apps that ive been working on for the last few years.

